# Coloring for python's nose test-running tool
export NOSE_REDNOSE=1

python_module_dir() {
    python -c "import $1, os; print os.path.dirname($1.__file__)"
}

cdpy() {
    cd "$(python_module_dir $1)"
}

mkpkg() {
    mkdir -p "$1"
    if [ -e "$1".py ]; then
        mv "$1".py "$1"/__init__.py
        rm -f "$1".pyc
    else
        touch "$1"/__init__.py
    fi
}

mkvenv() {
    if [ -d $1 ]; then
        echo refusing to use existing directory $1
        return 1
    fi
    mkdir -p $1
    cd $1
    virtualenv .venv
    act
    if [ x"$2" = x"+" ]; then
        pip install $1
    elif [ -n "$2" ]; then
        shift
        pip install "$@"
    fi
}

GLOBAL_VIRTUALENV_NAME="__global__"

function venv_prompt() {
    reset_prompt;
    if [[ "${VIRTUAL_ENV:t}" != "$GLOBAL_VIRTUALENV_NAME" ]]; then
        PS1="%{$bg[magenta]%}${VIRTUAL_ENV:t}$rst$PS1"
    fi
}

function _complete__fab { reply=(`fab -l -F short`); }
compctl -K _complete__fab fab

[ -z "$PIP_DOWNLOAD_CACHE" ] && { mkdir -p ~/.pip/cache && export PIP_DOWNLOAD_CACHE=${HOME}/.pip/cache; }

function newpy() {
    local template_dir="$HOME/.zsh.d/static/newpy"
    if [ "$1" = "-L" ]; then
        ls $template_dir
        return 2
    fi

    if [ ! -e ${template_dir}/$1.py ]; then
        ls ${template_dir}/$1.py
        echo "no such template $1"
        return 1
    fi

    cp ${template_dir}/$1.py $2
}
